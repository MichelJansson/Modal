{"version":3,"file":"blazored.modal.js","mappings":"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","sources":["webpack:///./node_modules/tabbable/dist/index.esm.js","webpack:///./node_modules/focus-trap/dist/focus-trap.esm.js","webpack:///./Interop/Blazored.Modal.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"sourcesContent":["/*!\n* tabbable 5.2.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\nvar isContentEditable = function isContentEditable(node) {\n  return node.contentEditable === 'true';\n};\n\nvar getTabindex = function getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n\n  if (isContentEditable(node)) {\n    return 0;\n  } // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n\n\n  if ((node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n\n  return node.tabIndex;\n};\n\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\n\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\n\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\n\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n\n  var radioScope = node.form || node.ownerDocument;\n\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n\n  var radioSet;\n\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nvar isHidden = function isHidden(node, displayCheck) {\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (!displayCheck || displayCheck === 'full') {\n    while (node) {\n      if (getComputedStyle(node).display === 'none') {\n        return true;\n      }\n\n      node = node.parentElement;\n    }\n  } else if (displayCheck === 'non-zero-area') {\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        width = _node$getBoundingClie.width,\n        height = _node$getBoundingClie.height;\n\n    return width === 0 && height === 0;\n  }\n\n  return false;\n}; // form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\n\n\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (isInput(node) || node.tagName === 'SELECT' || node.tagName === 'TEXTAREA' || node.tagName === 'BUTTON') {\n    var parentNode = node.parentElement;\n\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> as an immediate child of the disabled\n        //  <fieldset>: if the node is in that legend, it'll be enabled even\n        //  though the fieldset is disabled; otherwise, the node is in a\n        //  secondary/subsequent legend, or somewhere else within the fieldset\n        //  (however deep nested) and it'll be disabled\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n\n          if (child.tagName === 'LEGEND') {\n            if (child.contains(node)) {\n              return false;\n            } // the node isn't in the first legend (in doc order), so no matter\n            //  where it is now, it'll be disabled\n\n\n            return true;\n          }\n        } // the node isn't in a legend, so no matter where it is now, it'll be disabled\n\n\n        return true;\n      }\n\n      parentNode = parentNode.parentElement;\n    }\n  } // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n\n\n  return false;\n};\n\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options.displayCheck) || // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (!isNodeMatchingSelectorFocusable(options, node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {\n    return false;\n  }\n\n  return true;\n};\n\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  candidates.forEach(function (candidate, i) {\n    var candidateTabindex = getTabindex(candidate);\n\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate\n      });\n    }\n  });\n  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {\n    return a.node;\n  }).concat(regularTabbables);\n  return tabbableNodes;\n};\n\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  return candidates;\n};\n\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\n\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 6.7.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, isFocusable, isTabbable } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\n\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n}; // Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\n\n\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n  return idx;\n};\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\n\n\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\n\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n\n  var state = {\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying the first and last tabbable nodes in all containers/groups in\n    //  the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{ container: HTMLElement, firstTabbableNode: HTMLElement|null, lastTabbableNode: HTMLElement|null }>}\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  var containersContain = function containersContain(element) {\n    return !!(element && state.containers.some(function (container) {\n      return container.contains(element);\n    }));\n  };\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      optionValue = optionValue.apply(void 0, params);\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all\n\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (containersContain(doc.activeElement)) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.tabbableGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container);\n\n      if (tabbableNodes.length > 0) {\n        return {\n          container: container,\n          firstTabbableNode: tabbableNodes[0],\n          lastTabbableNode: tabbableNodes[tabbableNodes.length - 1]\n        };\n      }\n\n      return undefined;\n    }).filter(function (group) {\n      return !!group;\n    }); // remove groups with no tabbable nodes\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = containersContain(target); // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  var checkTab = function checkTab(e) {\n    var target = getActualTarget(e);\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findIndex(state.tabbableGroups, function (_ref) {\n        var container = _ref.container;\n        return container.contains(target);\n      });\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex < 0 && (state.tabbableGroups[containerIndex].container === target || isFocusable(target) && !isTabbable(target))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus), in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex < 0 && (state.tabbableGroups[containerIndex].container === target || isFocusable(target) && !isTabbable(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus), in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    } // else, let the browser take care of [shift+]tab and move the focus\n\n  };\n\n  var checkKey = function checkKey(e) {\n    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates, e) !== false) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  var checkClick = function checkClick(e) {\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    var target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n\n  trap = {\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n\n        addListeners();\n\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = getOption(deactivateOptions, 'onDeactivate');\n      var onPostDeactivate = getOption(deactivateOptions, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(deactivateOptions, 'checkCanReturnFocus');\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var returnFocus = getOption(deactivateOptions, 'returnFocus', 'returnFocusOnDeactivate');\n\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import * as focusTrap from 'focus-trap';\n\ninterface FocusTrapInstance {\n    id: string;\n    focusTrap: any;\n}\n\ninterface ModalInstance {\n    id: string;\n}\n\nexport class BlazoredModal {\n    \n    readonly _options: focusTrap.Options = { escapeDeactivates: false, allowOutsideClick: () => true };\n    private _traps: Array<FocusTrapInstance> = [];\n    private _modals: Array<ModalInstance> = [];\n\n    public activateScrollLock(id: string): void {\n        const scrollY = window.scrollY;\n        const body = document.body;\n        body.style.width = `${body.offsetWidth}px`;\n        body.style.position = 'fixed';\n        body.style.top = `-${scrollY}px`;\n        this._modals.push({ id });\n    }\n\n    public activateFocusTrap(element: any, id: string): void {\n        const trap = focusTrap.createFocusTrap(element, this._options);\n\n        try {\n            trap.activate();\n            this._traps.push({ id, focusTrap: trap });\n        } catch (e) {\n            if (e instanceof Error && e.message === 'Your focus-trap needs to have at least one focusable element') {\n                console.log('Focus trap not activated - No focusable elements found.');\n            }\n        }\n    }\n\n    public deactivateFocusTrap(id: string): void {\n        const trap = this._traps.find(i => i.id === id);\n        const scrollY = document.body.style.top;\n        if (this._modals.length == 1) {\n            document.body.style.position = '';\n            document.body.style.top = '';\n            document.body.style.width = '';\n        }\n        window.scrollTo(0, parseInt(scrollY || '0') * -1);\n        const currentModal = this._modals.find(i => i.id === id);\n        if (currentModal) {\n            const index = this._modals.indexOf(currentModal);\n            if (index > -1) {\n                this._modals.splice(index, 1);\n            }\n        }\n        if (trap) {\n            trap.focusTrap.deactivate();\n\n            const index = this._traps.indexOf(trap);\n            if (index > -1) {\n                this._traps.splice(index, 1);\n            }\n        }\n    }\n}\n\ndeclare global {\n    interface Window { BlazoredModal: BlazoredModal; }\n}\n\nwindow.BlazoredModal = new BlazoredModal();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(829);\n"],"names":["candidateSelectors","candidateSelector","join","matches","Element","prototype","msMatchesSelector","webkitMatchesSelector","getTabindex","node","tabindexAttr","parseInt","getAttribute","isNaN","contentEditable","isContentEditable","nodeName","tabIndex","sortOrderedTabbables","a","b","documentOrder","isInput","tagName","isNodeMatchingSelectorFocusable","options","disabled","type","isHiddenInput","displayCheck","getComputedStyle","visibility","nodeUnderDetails","call","parentElement","_node$getBoundingClie","getBoundingClientRect","width","height","display","isHidden","Array","slice","apply","children","some","child","isDetailsWithSummary","parentNode","i","length","item","contains","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isRadio","name","radioSet","radioScope","form","ownerDocument","queryRadios","querySelectorAll","window","CSS","escape","err","console","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isTabbable","Error","focusableCandidateSelector","concat","isFocusable","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_defineProperty","obj","key","value","defineProperty","configurable","writable","trapQueue","activeFocusTraps","activateTrap","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","arguments","params","_key","getActualTarget","event","target","shadowRoot","composedPath","createFocusTrap","elements","userOptions","doc","document","config","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","getOption","configOverrideOptions","optionName","configOptionName","containersContain","element","container","getNodeForOption","optionValue","_len2","_key2","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","regularTabbables","orderedTabbables","el","includeContainer","candidates","tabbableNodes","bind","unshift","candidate","candidateTabindex","sort","lastTabbableNode","group","tryFocus","focus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","checkPointerDown","e","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkKey","keyCode","isEscapeEvent","isTabEvent","destinationNode","containerIndex","_ref","shiftKey","startOfGroupIndex","_ref2","destinationGroupIndex","lastOfGroupIndex","_ref3","_destinationGroupIndex","checkTab","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","this","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","clearTimeout","onDeactivate","onPostDeactivate","checkCanReturnFocus","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean","_options","_traps","_modals","activateScrollLock","id","scrollY","body","style","offsetWidth","position","top","activateFocusTrap","focusTrap","log","deactivateFocusTrap","find","scrollTo","index","currentModal","BlazoredModal","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","get","prop","hasOwnProperty","r","Symbol","toStringTag"],"sourceRoot":""}